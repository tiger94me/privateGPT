import textract
import os
from langchain.document_loaders import TextLoader, PyPDFLoader
from langchain.text_splitter import RecursiveCharacterTextSplitter
from langchain.vectorstores import Chroma
from langchain.embeddings import LlamaCppEmbeddings
from sys import argv


def main():
   # Check file type
   file_path = argv[1]
   file_extension = os.path.splitext(file_path)[1]


   # If the file is a PDF, use PDF loader
   if file_extension == '.pdf':
       loader = PyPDFLoader(file_path)
       documents = loader.load()
   else:
       loader = TextLoader(file_path, encoding="utf8")
       documents = loader.load()


   # Load document and split in chunks
   text_splitter = RecursiveCharacterTextSplitter(chunk_size=500, chunk_overlap=50)
   texts = text_splitter.split_documents(documents)
   # Create embeddings
   llama = LlamaCppEmbeddings(model_path="./models/ggml-model-q4_0.bin")
   # Create and store locally vectorstore
   persist_directory = 'db'
   db = Chroma.from_documents(texts, llama, persist_directory=persist_directory)
   db.persist()
   db = None


if __name__ == "__main__":
   main()
